package com.demo;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicInteger;

public class ConnectionTest {

	static ConnectionPool pool = new ConnectionPool(10);
	
	//保证所有ConnectionRunner能够同时开始
	static CountDownLatch start = new CountDownLatch(1);
	
	static CountDownLatch end;
	
	public static void main(String[] args) {
		//线程数量
		int threadCount = 10;
		end = new CountDownLatch(threadCount);
		
		int count = 20;
		AtomicInteger got = new AtomicInteger();
		AtomicInteger notGot = new AtomicInteger();
		for(int i=0;i<threadCount;i++) {
			Thread thread = new Thread(new Con)
		}
	}
	
	
	static class ConnectionRunner implements Runnable{

		@Override
		public void run() {
			// TODO Auto-generated method stub
			
		}
		
	}
	
}
